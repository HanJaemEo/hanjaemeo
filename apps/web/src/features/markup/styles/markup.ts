import { defineRecipe, defineSlotRecipe } from '@pandacss/dev';

const SCOPE = 'markup' as const;

const markupHeadingRecipe = defineRecipe({
  className: `${SCOPE}_heading`,
  description: 'Heading styles for general markup purposes for MDX.',
  base: {
    fontFamily: 'heading',
    fontWeight: 'bold',
  },
  variants: {
    level: {
      title: {
        lineHeight: '1',
        my: '2',
        fontSize: {
          base: '5xl',
          md: '6xl',
        },
      },
      h1: {
        lineHeight: '1.25',
        my: '3',
        fontSize: '5xl',
      },
      h2: {
        lineHeight: '1.25',
        my: '3',
        fontSize: '4xl',
      },
      h3: {
        lineHeight: '1.25',
        my: '3',
        fontSize: '2xl',
      },
      h4: {
        lineHeight: '1.25',
        my: '3',
        fontSize: 'xl',
      },
      h5: {
        lineHeight: '1.25',
        my: '3',
        fontSize: 'lg',
      },
      h6: {
        lineHeight: '1.25',
        my: '3',
        fontSize: 'md',
      },
    },
  },
});

const markupHrRecipe = defineRecipe({
  className: `${SCOPE}_hr`,
  description: 'Horizontal rule styles for general markup purposes for MDX.',
  base: {
    color: 'keyplate.6',
    w: 'full',
    h: '1px',
    my: '4',
  },
});

const markupSpanRecipe = defineRecipe({
  className: `${SCOPE}_span`,
  description: 'Span styles for general markup purposes for MDX. It provides styles for inline code and math blocks.',
  base: {
    alignSelf: 'start',
    w: 'fit-content',
    '&.katex-display': {
      // For math blocks generated by `rehype-katex`
      overflowX: 'scroll',
      py: '1',
    },
    // For light & dark mode syntax highlighting
    // Refer: https://rehype-pretty-code.netlify.app/
    "code[data-language][data-theme*=' '] &": {
      _light: {
        color: 'var(--shiki-light)',
        bg: 'var(--shiki-light-bg)',
      },
      _dark: {
        color: 'var(--shiki-dark)',
        bg: 'var(--shiki-dark-bg)',
      },
    },
  },
});

const markupARecipe = defineRecipe({
  className: `${SCOPE}_a`,
  description: 'Anchor styles for general markup purposes for MDX.',
  base: {
    color: 'info.11',
    textDecoration: 'underline',
    _hover: {
      color: 'info.12',
    },
  },
});

const markupDivRecipe = defineRecipe({
  className: `${SCOPE}_div`,
  description:
    'Div styles for general markup purposes for MDX. It provides styles for GFM callouts/alerts and other block-level elements.',
  base: {
    '&.markdown-alert': {
      // For callouts/alerts generated by `rehype-github-alerts`
      borderLeft: '4px solid',
      borderColor: 'keyplate.9',
      bg: 'keyplate.3',
      px: '4',
      py: '2',
      my: '2',
      rounded: 'lg',
      '& > p.markdown-alert-title': {
        display: 'inline-flex',
        flexDirection: 'row',
        justifyItems: 'start',
        alignItems: 'center',
        gap: '2',
        fontWeight: 'bold',
        fontFamily: 'heading',
      },
      '&.markdown-alert-tip': {
        bg: 'success.3',
        borderColor: 'success.9',
        color: 'success.12',
      },
      '&.markdown-alert-warning': {
        bg: 'warning.3',
        borderColor: 'warning.9',
        color: 'warning.12',
      },
      '&.markdown-alert-note': {
        bg: 'info.3',
        borderColor: 'info.9',
        color: 'info.12',
      },
      '&.markdown-alert-important': {
        bg: 'primary.3',
        borderColor: 'primary.9',
        color: 'primary.12',
      },
      '&.markdown-alert-caution': {
        bg: 'danger.3',
        borderColor: 'danger.9',
        color: 'danger.12',
      },
    },
  },
});

const markupImageRecipe = defineSlotRecipe({
  className: `${SCOPE}_image`,
  description: 'Image styles for general markup purposes for MDX.',
  slots: ['img', 'figure', 'figcaption'],
  base: {
    img: {
      objectFit: 'cover',
      borderRadius: 'md',
      bg: 'keyplate.3',
    },
    figcaption: {
      textAlign: 'center',
      fontSize: 'sm',
      color: 'keyplate.11',
    },
    figure: {},
  },
  variants: {
    caption: {
      true: {
        figure: {
          my: '2',
        },
      },
      false: {
        img: {
          my: '2',
        },
      },
    },
  },
});

const markupListRecipe = defineRecipe({
  className: `${SCOPE}_list`,
  description: 'List styles for general markup purposes for MDX.',
  base: {
    my: '2',
  },
  variants: {
    type: {
      ordered: {
        listStyleType: 'disc',
        pl: '4',
        'li > &': {
          listStyleType: 'circle',
        },
        'li li > &': {
          listStyleType: 'square',
        },
      },
      unordered: {
        listStyleType: 'decimal',
        pl: '6',
        my: '2',
      },
    },
  },
});

const markupBlockquoteRecipe = defineRecipe({
  className: `${SCOPE}_blockquote`,
  description: 'Blockquote styles for general markup purposes for MDX.',
  base: {},
  variants: {
    type: {
      default: {
        borderLeft: '2px solid',
        borderColor: 'keyplate.9',
        pl: '4',
        my: '2',
      },
      translation: {
        my: '2',
        px: '2',
        py: '1',
        bg: 'slate.3',
        color: 'slate.11',
        rounded: 'lg',
      },
    },
  },
  defaultVariants: {
    type: 'default',
  },
});

const markupCodeSlotRecipe = defineSlotRecipe({
  className: `${SCOPE}_code`,
  description: 'Inline and block code styles for general markup purposes for MDX.',
  slots: ['pre', 'code'],
  base: {
    pre: {
      bg: 'keyplate.2',
      color: 'keyplate.11',
      rounded: 'lg',
      border: '1px solid',
      borderColor: 'keyplate.6',
      p: '4',
      my: '2',
      overflowX: 'scroll',
    },
    code: {
      counterReset: 'line',
      fontFamily: 'code',
      fontSize: '0.875em', // 14px in 16px base
      fontVariantLigatures: 'none',
      'pre > &': {
        // For code blocks
        // Refer: https://rehype-pretty-code.netlify.app/
      },
      ':not(pre) > &': {
        // For inline code
        // Refer: https://rehype-pretty-code.netlify.app/
        bg: 'keyplate.3',
        color: 'keyplate.11',
        rounded: 'sm',
        px: '1',
        py: '0.5',
      },
      '&[data-line-numbers] > [data-line]::before': {
        // For code blocks with line numbers
        // Refer: https://rehype-pretty-code.netlify.app/
        counterIncrement: 'line',
        content: 'counter(line)',
        display: 'inline-block',
        w: '6',
        mr: '3',
        textAlign: 'right',
        color: 'keyplate.10',
      },
    },
  },
});

const markupTableSlotRecipe = defineSlotRecipe({
  className: `${SCOPE}_table`,
  description: 'Table styles for general markup purposes for MDX.',
  slots: ['table', 'thead', 'tbody', 'tr', 'th', 'td'],
  base: {
    table: {
      borderCollapse: 'collapse',
      w: 'full',
      my: '4',
      rounded: 'lg',
      overflow: 'hidden',
    },
    thead: {
      bg: 'keyplate.3',
      fontWeight: 'bold',
    },
    tbody: {},
    tr: {
      borderBottom: '1px solid',
      borderColor: 'keyplate.5',
      '&:last-child': {
        border: 'none',
      },
    },
    th: {
      px: '2',
      py: '1',
    },
    td: {
      px: '2',
      py: '1',
    },
  },
});

const markupShowcaseRecipe = defineRecipe({
  className: `${SCOPE}_showcase`,
  description: 'Showcase container styles for general markup purposes for MDX.',
  jsx: ['Showcase'],
  base: {
    w: 'full',
    bgImage:
      'linear-gradient(0deg, transparent 31px, token(colors.keyplate.4) 32px), linear-gradient(90deg,  transparent 31px, token(colors.keyplate.4) 32px)',
    bgSize: '32px 32px',
    bgRepeat: 'repeat',
    rounded: 'lg',
    border: '1px solid',
    borderColor: 'keyplate.6',
    p: '4',
    my: '2',
    overflowX: 'scroll',
    display: 'flex',
    justifyContent: 'center',
    alignItems: 'start',
    gap: '2',
    flexDirection: 'column',
  },
});

// | 品詞   | コード上での表現 | 色       | 説明                                           |
// | ------ | ---------------- | -------- | ---------------------------------------------- |
// | 名詞   | `noun`           | `pink`   | <Noun>{유행}^(流行)</Noun>                     |
// | 動詞   | `verb`           | `green`  |                                                |
// | 形容詞 | `adjective`      | `purple` |                                                |
// | 助詞   | `particle`       | `slate`  |                                                |
// | 副詞   | `adverb`         | `indigo` |                                                |
// | 代名詞 | `pronoun`        | `orange` |                                                |
// | 冠形詞 | `determiner`     | `yellow` |                                                |
// | 数詞   | `numeral`        | `cyan`   |                                                |
// | 感嘆詞 | `interjection`   | `lime`   |                                                |
// | 未分類 | `unclassified`   | `slate`  | 慣用表現などで分類が難しい場合にのみ使用する。 |

const markupWordRecipe = defineRecipe({
  className: `${SCOPE}_word`,
  description: 'Word styles for general markup purposes for MDX.',
  jsx: ['Word'],
  base: {
    '& > ruby': {
      fontSize: 'xl',
      lineHeight: '1.5',
    },
    '& > ruby > rt': {
      fontSize: 'sm',
      transform: 'translateY(-0.25em)',
    },
  },
  variants: {
    type: {
      noun: {
        color: 'pink.11',
      },
      verb: {
        color: 'green.11',
      },
      adjective: {
        color: 'purple.11',
      },
      particle: {
        color: 'slate.11',
      },
      adverb: {
        color: 'indigo.11',
      },
      pronoun: {
        color: 'orange.11',
      },
      determiner: {
        color: 'yellow.11',
      },
      numeral: {
        color: 'cyan.11',
      },
      interjection: {
        color: 'lime.11',
      },
      unclassified: {
        color: 'slate.1',
        WebkitTextStrokeWidth: '1px',
        WebkitTextStrokeColor: 'token(colors.slate.12)',
      },
      space: {
        color: 'slate.6',
        '& > ruby > rt': {
          color: 'slate.9',
        },
      },
    },
  },
  defaultVariants: {
    type: 'unclassified',
  },
});

const markupTimestampRecipe = defineRecipe({
  className: `${SCOPE}_timestamp`,
  description: 'Timestamp styles for general markup purposes for MDX.',
  base: {
    my: '1',
    alignSelf: 'start',
    color: 'info.11',
    textDecoration: 'underline',
    _hover: {
      color: 'info.12',
    },
  },
});

export {
  markupHeadingRecipe,
  markupHrRecipe,
  markupSpanRecipe,
  markupARecipe,
  markupDivRecipe,
  markupImageRecipe,
  markupListRecipe,
  markupBlockquoteRecipe,
  markupCodeSlotRecipe,
  markupTableSlotRecipe,
  markupShowcaseRecipe,
  markupWordRecipe,
  markupTimestampRecipe,
};
